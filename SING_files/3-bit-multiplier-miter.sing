ring r = (2, X), (Zs, Z, A, B, t, z0, z1, z2, r0, r1, r2, r3, r4,
r5, r6, r7, r8, r9, r10, r11, a0, a1, a2, b0, b1, b2), lp;

minpoly = X^3 + X +1;

poly spec = Zs - A*B;

poly f1 = r0 + a0*b0;
poly f2 = r1 + a1*b2;
poly f3 = r2 + a2*b1;
poly f4 = r3 + a0*b1;
poly f5 = r4 + a1*b0;
poly f6 = r5 + a1*b2;
poly f7 = r6 + a2*b1;
poly f8 = r7 + a2*b2;
poly f9 = r8 + a0*b2;
poly f10 = r9 + a1*b1;
poly f11 = r10 + a2*b0;
poly f12 = r11 + a2*b2;

// big multi-input XOR gates
poly f13 = z0 + r0 + r1 + r2;
poly f14 = z1 + r3 + r4 + r5 + r6 + r7;
poly f15 = z2 + r8 + r9 + r10 + r11;

poly f16 = A + a0 + a1*X + a2*X^2;
poly f17 = B + b0 + b1*X + b2*X^2;
poly f18 = Z + z0 + z1*X + z2*X^2;

// miter poly
poly fm = (Z-Zs)*t -1;

ideal J0 = a0^2-a0, a1^2-a1, a2^2-a2, b0^2-b0, b1^2-b1, b2^2-b2;

ideal Jm = f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, fm, spec;

groebner(Jm+J0);

exit;
